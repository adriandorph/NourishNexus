@page "/login"
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@inject NavigationManager manager
@inject UserService UserService

<PageTitle>Login</PageTitle>
<h1>Login</h1>

<EditForm Model="userEmail" OnSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="userEmail" class="form-control" />
        <ValidationMessage For="@(() => userEmail)" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
     <div class ="@messageCssClass">
        <span>@message</span>
    </div>
</EditForm>

@code {

    string userEmail {get; set;} = "";

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleLogin()
    {
        var response = await UserService.Login(userEmail);
        
        if(response.IsSuccessStatusCode){
        messageCssClass = "text-success";
        message = "Login Succesful";
        var token = await response.Content.ReadAsStringAsync();
        await LocalStorage.SetItemAsync("nourish_nexus_auth_token",token);
        await AuthStateProvider.GetAuthenticationStateAsync();
        } 
        
        else if(response.StatusCode == System.Net.HttpStatusCode.NotFound) {
            messageCssClass = "text-danger";
            message = "Login failed, user does not exist. Please register.";
        } 
        else {
             messageCssClass = "text-danger";
            message = "Login failed";
        }
        
        }
    }