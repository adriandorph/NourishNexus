@page "/recipes/create"
@attribute [Authorize]
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using server.Core.EF.DTO;
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject AuthenticationStateProvider CustomAuthStateProvider

<PageTitle> Create Recipe </PageTitle>

<h1>Create Recipe</h1>
        
<EditForm Model="@recipe" Context="formContext">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="title">Title</label>
        <InputText class="form-control" id="title" @bind-Value="@recipe.Title" />
    </div>

    <div class="form-group">
        <label for="method">Method</label>
        <InputTextArea class="form-control" id="method" @bind-Value="@recipe.Method" rows="7" />

    </div>

    <div class="form-group">
        <label for="description">Description</label>
        <InputTextArea class="form-control" id="description" @bind-Value="@recipe.Description" rows="7" />
    </div>

    <div class="form-group">
        <label for="categories">Choose Category</label>
    <InputSelect id="categories" class="mt-2 form-control" @bind-Value="recipe.CategoryIDs" multiple>
        @foreach (var category in AllCategories)
        {
            <option value="@category.Id">@category.Name</option>
        }
    </InputSelect>
    </div>

    <div class="form-group">
        <div>Recipe visibility</div>
        <InputRadioGroup @bind-Value="recipe.IsPublic">
            <InputRadio id="Public" Value="true" class="form-check-input" /><label class="form-check-label" for="Public">Public</label>
            <InputRadio id="Private" Value="false" class="form-check-input" /><label class="form-check-label" for="Private">Private</label>
        </InputRadioGroup>
    </div>
    <div class="form-group">
        <p>If you choose to create a private recipe, it will not be visible to other users</p>
    </div>
    <div class="form-group">
        <br />
        <button type="button" class="btn btn-danger">Cancel</button>
        <button type="submit" class="btn btn-success btn-block">Create</button>
    </div>
</EditForm>
 



@code {

    private RecipeCreateDTO recipe = new();
    private List<CategoryDTO> AllCategories { get; set; } = new List<CategoryDTO>();

        
}



