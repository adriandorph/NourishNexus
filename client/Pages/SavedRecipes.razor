@page "/savedRecipes"
@attribute [Authorize]
@using System.Collections.Generic
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using server.Core.EF.DTO;
@using Microsoft.JSInterop
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject AuthenticationStateProvider CustomAuthStateProvider
@inject RecipeService RecipeService
@inject UserService UserService
@inject IJSRuntime JSRuntime


<h1 class="text-center mb-3">Saved Recipes</h1>

<div class="form-group my-3">
    <input type="text" class="form-control rounded-edge" placeholder="Search..." id="search-query" @oninput="PerformSearch" />
</div>
<hr class="mb-4">

<div class="container mb-5">
    <div class="row">
            @if (recipes == null)
            {
                <p><em>Loading...</em></p>
            }
            else if (recipes.Any() || searchQuery.Length > 0)
            {
                foreach (var recipe in recipes)
                {
                    <div class="col-12 col-md-6 col-xl-4">
                    <div class="card mb-5">
                        <div class="card-body">
                            <h5 class="card-title">@recipe.Title</h5>
                            <p class="card-text">@((recipe.Description.Length > 200) ? $"{recipe.Description.Substring(0, recipeDescriptionLength)}..." : recipe.Description)</p>
                            <a href="@($"viewRecipe/{recipe.Id}/{"view"}/1")" class="btn btn-primary mx-2">View</a>
                            @if (recipe.AuthorId == userID)
                            {
                                <a href="@($"recipes/edit/{recipe.Id}")" class="btn btn-secondary mx-2">Edit</a>
                            }
                        </div>
                    </div>
                    </div>
                }
            }
            else
            {
                <p>You have not saved any recipes yet. Please <a href="recipes/create">create a recipe</a>, or <a
                        href="Community">add a recipe from the Community</a></p>
            }
        </div>
    </div>

<div id="createrecipebtn" class="d-flex align-items-center my-3 justify-content-center fixed-bottom container">
    <button class="btn btn-primary btn-lg shadow-custom" @onclick="HandleCreateRecipe">
         Create Recipe </button>
</div>

<div class="d-flex scrolltop align-items-center justify-content-left fixed-bottom">
    <button @onclick="ScrollToTop" class="btn btn-info scroll-to-top shadow-custom"> 
        <i class ="oi oi-chevron-top"></i>To top</button>
</div>




@code
{


    private List<RecipeDTO>? recipes;

    private int userID;

    private string searchQuery = "";
    private int recipeDescriptionLength = 200;

    protected override async Task OnInitializedAsync()
    {
        var userClaim = (await CustomAuthStateProvider.GetAuthenticationStateAsync()).User;
        var userIdClaim = userClaim.FindFirst(ClaimTypes.NameIdentifier);
        int.TryParse(userIdClaim!.Value, out userID);
        recipes = await RecipeService.GetSavedBySearchWord("_", userID);
    }

    private void ScrollToTop()
    {
        JSRuntime.InvokeVoidAsync("scrollTo", 0, 0);
    }

    public void HandleCreateRecipe()
    {
        NavigationManager.NavigateTo("recipes/create");
    }

    private async Task PerformSearch(ChangeEventArgs e)
    {
        string searchQuery = e.Value != null ? e.Value!.ToString() ?? "_" : "_";
        if (searchQuery.Length == 0) searchQuery = "_";
        recipes = await RecipeService.GetSavedBySearchWord(searchQuery, userID);
    }
}
